name: semgrep-sast-scan-and-import-to-defectdojo
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  semgrep-sast-scan-to-defectdojo:
    name: semgrep sast scan
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: semgrep scan
        run: |
          mkdir -p semgrep/results
          semgrep --config auto --json --output=semgrep/results/semgrep.json
      - name: import scan results into defectdojo
        run: |
          curl -X POST "${{ secrets.defectdojo_url }}/api/v2/import-scan/" \
            -H "accept: application/json" \
            -H "Content-Type: multipart/form-data" \
            -H "Authorization: Token ${{ secrets.defectdojo_token }}" \
            -F "scan_date=$(date +'%Y-%m-%d')" \
            -F "scan_type=Semgrep JSON Report" \
            -F "file=@semgrep/results/semgrep.json;type=application/json" \
            -F "tags=github_actions,ci" \
            -F "auto_create_context=true" \
            -F "engagement_name=pygoat_ci_scan" \
            -F "product_name=pygoat_demo" \
            -F "product_type_name=typical_app" \
            -F "source_code_management_uri=${{ github.server_url }}/${{ github.repository }}" \
            -F "branch_tag=${{ github.ref }}" \
            -F "commit_hash=${{ github.sha }}" \
            -F "close_old_findings=true"
      - name: Upload to Pixee
        if: github.event_name == 'pull_request'
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFECTDOJO_TOKEN: ${{ secrets.DEFECTDOJO_TOKEN }}
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          REPO_NAME: ${{ github.event.repository.name }}
          REPO_OWNER: ${{ github.event.repository_owner }}
        run: |
          rule_id="python.django.security.audit.secure-cookies.django-secure-set-cookie"
          URL="$DEFECTDOJO_URL/api/v2/findings/?commit_hash=$GITHUB_SHA&title=$rule_id&product_name=pygoat_demo"
          curl -v -H "Authorization: Token $DEFECTDOJO_TOKEN" "$URL" -o defectdojo.findings.json

          cat defectdojo.findings.json

          SECRET=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=https://app.pixee.ai" | jq -j '.value')
          API_RESPONSE=$(curl -v -X PUT -H "Authorization: Bearer $SECRET" -H "Content-Type: multipart/form-data" -F "file=@defectdojo.findings.json" "https://api.pixee.ai/analysis-input/PixeeSandbox/pygoat-defectdojo/$GITHUB_SHA/defectdojo")
          echo "$API_RESPONSE"
      - name: "Trigger Pixee Analysis"
        if: github.event_name == 'pull_request'
        run: |
          SECRET=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=https://app.pixee.ai" | jq -j '.value')
          API_RESPONSE=$(curl -v -X POST -H "Authorization: Bearer $SECRET" "https://api.pixee.ai/analysis-input/PixeeSandbox/pygoat-defectdojo/${{ github.event.number }}")
          echo $API_RESPONSE
